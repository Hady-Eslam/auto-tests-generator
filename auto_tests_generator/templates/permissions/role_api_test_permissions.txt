class Test{{ role_title }}Permissions(BaseTest{{ api_name }}Permissions):

    def test_{{ role_filtered_name }}_can_{{ post.can_post }}post(
            self, mock_{{ role_filtered_name }}_authenticate):

        factory = APIRequestFactory()
        request = factory.post('/testing/')
        response = self.view(request, version='v1')

        assert response.status_code == status.{{ post.status }}

    def test_{{ role_filtered_name }}_can_{{ get.can_get }}get(
            self, mock_{{ role_filtered_name }}_authenticate):

        factory = APIRequestFactory()
        request = factory.get('/testing/')
        response = self.view(request, version='v1')

        assert response.status_code == status.{{ get.status }}

    def test_{{ role_filtered_name }}_can_{{ put.can_put }}put(
            self, mock_{{ role_filtered_name }}_authenticate):

        factory = APIRequestFactory()
        request = factory.put('/testing/')
        response = self.view(request, version='v1')

        assert response.status_code == status.{{ put.status }}

    def test_{{ role_filtered_name }}_can_{{ patch.can_patch }}patch(
            self, mock_{{ role_filtered_name }}_authenticate):

        factory = APIRequestFactory()
        request = factory.patch('/testing/')
        response = self.view(request, version='v1')

        assert response.status_code == status.{{ patch.status }}

    def test_{{ role_filtered_name }}_can_{{ delete.can_delete }}delete(
            self, mock_{{ role_filtered_name }}_authenticate):

        factory = APIRequestFactory()
        request = factory.delete('/testing/')
        response = self.view(request, version='v1')

        assert response.status_code == status.{{ delete.status }}
